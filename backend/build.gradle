buildscript {
    repositories {
        maven {
            url "http://repo.spring.io/milestone"
        }
        mavenCentral()
        jcenter()
    }    
    dependencies {
        classpath "de.aaschmid.gradle.plugins:gradle-cpd-plugin:0.4"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE")
        classpath "mysql:mysql-connector-java:5.1.6"
        classpath "org.flywaydb:flyway-gradle-plugin:3.2.1"
        classpath "nu.studer:gradle-jooq-plugin:1.0.5"
    }
}

apply plugin : "distribution"
apply plugin: "spring-boot"
apply from : "sca.gradle"
apply plugin: 'org.flywaydb.flyway'
apply plugin: 'nu.studer.jooq'

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    compile('org.projectlombok:lombok:1.16.6')
    runtime 'mysql:mysql-connector-java'
    compile 'org.flywaydb:flyway-core:3.2.1'
    compile 'org.springframework.boot:spring-boot-starter-jooq'

    testCompile("junit:junit")
    testCompile("com.jayway.restassured:rest-assured:2.9.0")
    testCompile group: 'org.flywaydb.flyway-test-extensions', name: 'flyway-spring-test', version: '4.0.1'

}

flyway {
    url = 'jdbc:mysql://localhost:3306/short_url_service'
    user = 'root'
}

jooq {
    schema(sourceSets.main) {
        jdbc {
            driver = 'com.mysql.jdbc.Driver'
            url = 'jdbc:mysql://localhost:3306/short_url_service'
            user = 'root'
            schema = 'short_url_service'
        }
        generator {
            name = 'org.jooq.util.DefaultGenerator'
            strategy {
                name = 'org.jooq.util.DefaultGeneratorStrategy'
            }
            database {
                name = 'org.jooq.util.mysql.MySQLDatabase'
                inputSchema = 'short_url_service'
            }
            target {
                packageName = 'com.eckyputrady.shorturl.generated.jooq'
                directory = 'src/main/java'
            }
        }
    }
}

compileJava {
    // Prevents jooq plugin from generating schema on build
    // PS : make sure generate{$name}JooqSchemaSource is same as {$name}(sourceSets.main) above
    compileJava.taskDependencies.values -= 'generateSchemaJooqSchemaSource'
}

repositories {
    maven {
            url 'http://repo.spring.io/milestone'
    }
    mavenCentral()
}
